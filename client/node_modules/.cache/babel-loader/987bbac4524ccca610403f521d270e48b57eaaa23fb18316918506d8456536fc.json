{"ast":null,"code":"class AuthService {\n  async login(email, password) {\n    const response = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      localStorage.setItem('token', data);\n      return data;\n    } else {\n      throw new Error(data);\n    }\n  }\n  async register(name, email, password) {\n    const response = await fetch('http://localhost:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return data;\n    } else {\n      throw new Error(data);\n    }\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    const token = this.getToken();\n    return token !== null;\n  }\n}\nexport default new A();","map":{"version":3,"names":["AuthService","login","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","Error","register","name","getToken","getItem","isLoggedIn","token","A"],"sources":["/Users/faxraddin/MERN/client/src/user.js"],"sourcesContent":["class AuthService {\n    async login(email, password) {\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data);\n        return data;\n      } else {\n        throw new Error(data);\n      }\n    }\n  \n    async register(name, email, password) {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name, email, password })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        throw new Error(data);\n      }\n    }\n  \n    getToken() {\n      return localStorage.getItem('token');\n    }\n  \n    isLoggedIn() {\n      const token = this.getToken();\n      return token !== null;\n    }\n  }\n  \n  export default new A"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EACd,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAAC;MACnC,OAAOA,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAACL,IAAI,CAAC;IACvB;EACF;EAEA,MAAMM,QAAQA,CAACC,IAAI,EAAEhB,KAAK,EAAEC,QAAQ,EAAE;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEQ,IAAI;QAAEhB,KAAK;QAAEC;MAAS,CAAC;IAChD,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,OAAOF,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAACL,IAAI,CAAC;IACvB;EACF;EAEAQ,QAAQA,CAAA,EAAG;IACT,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,UAAUA,CAAA,EAAG;IACX,MAAMC,KAAK,GAAG,IAAI,CAACH,QAAQ,EAAE;IAC7B,OAAOG,KAAK,KAAK,IAAI;EACvB;AACF;AAEA,eAAe,IAAIC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}